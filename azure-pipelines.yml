trigger:
- master
- releases/*

pr:
- master
- releases/*

schedules:
- cron: "0 0 * * *"
  displayName: Daily upstream bochs HEAD build
  branches:
    include:
    - bochshead
  always: true

variables:
  BOCHS_REV: HEAD

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - script: |
      set /P BOCHS_REV=< BOCHS_REV
      echo "##vso[task.setvariable variable=BOCHS_REV]%BOCHS_REV%"
      mkdir "$(Build.ArtifactStagingDirectory)/msvc/lib"
      mkdir "$(Build.ArtifactStagingDirectory)/msvc/bochs"
      bash prep.sh
    displayName: Prep Build
  - script: |
      call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd bochs
      bash .conf.cpu-msvc
      nmake
      cp cpu/libcpu.a $(Build.ArtifactStagingDirectory)/msvc/lib/cpu.lib
      cp cpu/fpu/libfpu.a $(Build.ArtifactStagingDirectory)/msvc/lib/fpu.lib
      cp cpu/avx/libavx.a $(Build.ArtifactStagingDirectory)/msvc/lib/avx.lib
      cp cpu/cpudb/libcpudb.a $(Build.ArtifactStagingDirectory)/msvc/lib/cpudb.lib
      nmake all-clean
    displayName: Build MSVC
  - task: CopyFiles@2
    inputs:
      sourceFolder: bochs
      targetFolder: $(Build.ArtifactStagingDirectory)\msvc\bochs
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: bochs-x64-win
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      export BOCHS_REV=$(cat BOCHS_REV)
      echo "##vso[task.setvariable variable=BOCHS_REV]$BOCHS_REV"
      mkdir -p $(Build.ArtifactStagingDirectory)/gcc/lib
      mkdir -p $(Build.ArtifactStagingDirectory)/gcc/bochs
      mkdir -p $(Build.ArtifactStagingDirectory)/clang/lib
      mkdir -p $(Build.ArtifactStagingDirectory)/clang/bochs
      sh prep.sh
    displayName: Prep Build
  - script: |
      cd bochs
      CC=gcc CXX=g++ sh .conf.cpu
      make || true
      cp cpu/libcpu.a $(Build.ArtifactStagingDirectory)/gcc/lib/libcpu.a
      cp cpu/fpu/libfpu.a $(Build.ArtifactStagingDirectory)/gcc/lib/libfpu.a
      cp cpu/avx/libavx.a $(Build.ArtifactStagingDirectory)/gcc/lib/libavx.a
      cp cpu/cpudb/libcpudb.a $(Build.ArtifactStagingDirectory)/gcc/lib/libcpudb.a
      make all-clean
    displayName: Build GCC
  - task: CopyFiles@2
    inputs:
      sourceFolder: bochs
      targetFolder: $(Build.ArtifactStagingDirectory)/gcc/bochs
  - script: |
      cd bochs
      CC=clang CXX=clang++ sh .conf.cpu
      make || true
      cp cpu/libcpu.a $(Build.ArtifactStagingDirectory)/clang/lib/libcpu.a
      cp cpu/fpu/libfpu.a $(Build.ArtifactStagingDirectory)/clang/lib/libfpu.a
      cp cpu/avx/libavx.a $(Build.ArtifactStagingDirectory)/clang/lib/libavx.a
      cp cpu/cpudb/libcpudb.a $(Build.ArtifactStagingDirectory)/clang/lib/libcpudb.a
      make all-clean
    displayName: Build Clang
  - task: CopyFiles@2
    inputs:
      sourceFolder: bochs
      targetFolder: $(Build.ArtifactStagingDirectory)/clang/bochs
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: bochs-x64-linux
- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      export BOCHS_REV=$(cat BOCHS_REV)
      echo "##vso[task.setvariable variable=BOCHS_REV]$BOCHS_REV"
      mkdir -p $(Build.ArtifactStagingDirectory)/clang/lib
      mkdir -p $(Build.ArtifactStagingDirectory)/clang/bochs
      sh prep.sh
  - script: |
      cd bochs
      CC=clang CXX=clang++ sh .conf.cpu
      make || true
      cp cpu/libcpu.a $(Build.ArtifactStagingDirectory)/clang/lib/libcpu.a
      cp cpu/fpu/libfpu.a $(Build.ArtifactStagingDirectory)/clang/lib/libfpu.a
      cp cpu/avx/libavx.a $(Build.ArtifactStagingDirectory)/clang/lib/libavx.a
      cp cpu/cpudb/libcpudb.a $(Build.ArtifactStagingDirectory)/clang/lib/libcpudb.a
      make all-clean
    displayName: Build Clang
  - task: CopyFiles@2
    inputs:
      sourceFolder: bochs
      targetFolder: $(Build.ArtifactStagingDirectory)/clang/bochs
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: bochs-x64-macos
